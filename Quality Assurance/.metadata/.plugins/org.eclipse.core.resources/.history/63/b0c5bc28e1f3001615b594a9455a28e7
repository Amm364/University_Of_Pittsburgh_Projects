import org.junit.Test;
import static org.junit.Assert.*;

import java.util.Random;

import org.mockito.*;

public class CitySimUnitTest {
	
	@Test
	public void testGetLocationName(){
		Location l = new Location("Presby",false);
		assertEquals("Presby",l.getLocationName());
	}
	
	@Test
	public void testIsOutsideCity(){
		Location l = new Location("Presby",true);
		assertEquals(true,l.isOutsideCity());
	}
	
	@Test
	public void testGetNumberOfAdjacentStreets(){
		Location l = new Location("Presby",false);
		Street s = Mockito.mock(Street.class);
		l.addAdjacentStreet(s);
		assertEquals(1,l.getNumberOfAdjacentStreets());
	}
	
	@Test
	public void testAddAdjacentStreet(){
		Location l = new Location("Presby",false);
		Street s = Mockito.mock(Street.class);
		assertEquals(true,l.addAdjacentStreet(s));
	}
	
	@Test
	public void testAddLocationToStreet(){
		Location l = Mockito.mock(Location.class);
		Street s = new Street("Bill St.");
		assertEquals(true,s.addLocation(l));
	}
	
	@Test
	public void testAddLocationToStreetFail(){
		Location l1 = Mockito.mock(Location.class);
		Location l2 = Mockito.mock(Location.class);
		Location l3 = Mockito.mock(Location.class);
		Street s = new Street("Bill St.");
		s.addLocation(l1);
		s.addLocation(l2);
		assertEquals(false,s.addLocation(l3));
	}
	
	@Test
	public void testTraverseStreet(){
		Location l1 = new Location("Presby",false);
		Location l2 = new Location("Hillman",false);
		Location current=l1;
		Street s = new Street("Bill");
		s.addLocation(l1);
		s.addLocation(l2);
		current=s.traverseStreet(current);
		assertEquals(l2,current);
	}
	
	//Attempt to add the same location to the edge. Expect a fail.
	@Test
	public void testAddSameLocationFail(){
		Location l1 = new Location("Presby",false);
		Street s = new Street("Bill");
		s.addLocation(l1);
		assertEquals(false,s.addLocation(l1));
	}
	
	/**Test the method that creates a connection between a location and a street.
	 * This method calls addLocationToStreet and addAdjacentStreet and returns success or not. 
	 **/
	@Test
	public void testConnectStreetAndLocation(){
		Location l = new Location("Presby",false);
		Street s = new Street("Bill");
		boolean result=CitySim.connectStreetAndLocation(l, s);
		assertEquals(true,result);
	}
	
	@Test
	public void testGetRandomInt(){
		Random rand = new Random();
		boolean result;
		int r = CitySim.getRandomDirection(rand, 10);
		if (r>=0 && r<10){
			result=true;
		}
		else{
			result=false;
		}
		assertEquals(true,result);
	}
}
